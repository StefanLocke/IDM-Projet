/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.mydsl.idmdsl.Programme

@ExtendWith(InjectionExtension)
@InjectWith(MyDslInjectorProvider)
class MyDslParsingTest {
	@Inject
	ParseHelper<Programme> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			Create() {
				InsertCol(0, "Prenom");
				InsertCol(1, "Sexe");
				Insert(0, "Prenom", "Alexis");
				Insert(0,"Sexe", "Male");
				Print(Selectcell(1,"Sexe"));
			}
		''')
		val compiler = new PythonCompiler(result);
		print(compiler.doCompile)
		val compilerR = new RCompiler(result);
		print(compilerR.doCompile)
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}