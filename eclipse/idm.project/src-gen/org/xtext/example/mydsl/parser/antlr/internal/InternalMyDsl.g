/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Programme";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgramme
entryRuleProgramme returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgrammeRule()); }
	iv_ruleProgramme=ruleProgramme
	{ $current=$iv_ruleProgramme.current; }
	EOF;

// Rule Programme
ruleProgramme returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgrammeAccess().getLoadscopesLoadscopeParserRuleCall_0());
			}
			lv_loadscopes_0_0=ruleLoadscope
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgrammeRule());
				}
				add(
					$current,
					"loadscopes",
					lv_loadscopes_0_0,
					"org.xtext.example.mydsl.MyDsl.Loadscope");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleLoadscope
entryRuleLoadscope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadscopeRule()); }
	iv_ruleLoadscope=ruleLoadscope
	{ $current=$iv_ruleLoadscope.current; }
	EOF;

// Rule Loadscope
ruleLoadscope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoadscopeAccess().getLoadParserRuleCall_0());
		}
		this_Load_0=ruleLoad
		{
			$current = $this_Load_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoadscopeAccess().getCreateParserRuleCall_1());
		}
		this_Create_1=ruleCreate
		{
			$current = $this_Create_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	iv_ruleLoad=ruleLoad
	{ $current=$iv_ruleLoad.current; }
	EOF;

// Rule Load
ruleLoad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Load('
		{
			newLeafNode(otherlv_0, grammarAccess.getLoadAccess().getLoadKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadAccess().getPathStringValueParserRuleCall_1_0());
				}
				lv_path_1_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadRule());
					}
					set(
						$current,
						"path",
						lv_path_1_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoadAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoadAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadAccess().getInstructionsInstructionParserRuleCall_4_0());
				}
				lv_instructions_4_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_4_0,
						"org.xtext.example.mydsl.MyDsl.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getLoadAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCreate
entryRuleCreate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateRule()); }
	iv_ruleCreate=ruleCreate
	{ $current=$iv_ruleCreate.current; }
	EOF;

// Rule Create
ruleCreate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Create()'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateAccess().getCreateKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateAccess().getInstructionsInstructionParserRuleCall_2_0());
				}
				lv_instructions_2_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_2_0,
						"org.xtext.example.mydsl.MyDsl.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getInsertLineParserRuleCall_0_0());
			}
			this_InsertLine_0=ruleInsertLine
			{
				$current = $this_InsertLine_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getRemoveLineParserRuleCall_0_1());
			}
			this_RemoveLine_1=ruleRemoveLine
			{
				$current = $this_RemoveLine_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getInsertColParserRuleCall_0_2());
			}
			this_InsertCol_2=ruleInsertCol
			{
				$current = $this_InsertCol_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getRemoveColParserRuleCall_0_3());
			}
			this_RemoveCol_3=ruleRemoveCol
			{
				$current = $this_RemoveCol_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getInsertParserRuleCall_0_4());
			}
			this_Insert_4=ruleInsert
			{
				$current = $this_Insert_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getExportJSONParserRuleCall_0_5());
			}
			this_ExportJSON_5=ruleExportJSON
			{
				$current = $this_ExportJSON_5.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getExportCSVParserRuleCall_0_6());
			}
			this_ExportCSV_6=ruleExportCSV
			{
				$current = $this_ExportCSV_6.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getPrintParserRuleCall_0_7());
			}
			this_Print_7=rulePrint
			{
				$current = $this_Print_7.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getInstructionAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleInsertCol
entryRuleInsertCol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertColRule()); }
	iv_ruleInsertCol=ruleInsertCol
	{ $current=$iv_ruleInsertCol.current; }
	EOF;

// Rule InsertCol
ruleInsertCol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='InsertCol('
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertColAccess().getInsertColKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertColAccess().getColIndexMathExpressionParserRuleCall_1_0());
				}
				lv_colIndex_1_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertColRule());
					}
					set(
						$current,
						"colIndex",
						lv_colIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertColAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertColAccess().getColNameStringValueParserRuleCall_3_0());
				}
				lv_colName_3_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertColRule());
					}
					set(
						$current,
						"colName",
						lv_colName_3_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getInsertColAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRemoveCol
entryRuleRemoveCol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveColRule()); }
	iv_ruleRemoveCol=ruleRemoveCol
	{ $current=$iv_ruleRemoveCol.current; }
	EOF;

// Rule RemoveCol
ruleRemoveCol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RemoveCol('
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveColAccess().getRemoveColKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveColAccess().getColNameStringValueParserRuleCall_1_0());
				}
				lv_colName_1_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveColRule());
					}
					set(
						$current,
						"colName",
						lv_colName_1_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getRemoveColAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleInsertLine
entryRuleInsertLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertLineRule()); }
	iv_ruleInsertLine=ruleInsertLine
	{ $current=$iv_ruleInsertLine.current; }
	EOF;

// Rule InsertLine
ruleInsertLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='InsertLine('
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertLineAccess().getInsertLineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertLineAccess().getLineIndexMathExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertLineRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertLineAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleRemoveLine
entryRuleRemoveLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveLineRule()); }
	iv_ruleRemoveLine=ruleRemoveLine
	{ $current=$iv_ruleRemoveLine.current; }
	EOF;

// Rule RemoveLine
ruleRemoveLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RemoveLine('
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveLineAccess().getRemoveLineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveLineAccess().getLineIndexMathExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveLineRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getRemoveLineAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Insert('
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertAccess().getInsertKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getLineIndexMathExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getColNameStringValueParserRuleCall_3_0());
				}
				lv_colName_3_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"colName",
						lv_colName_3_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getInsertAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getValueExpressionParserRuleCall_5_0());
				}
				lv_value_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getInsertAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRulePrint
entryRulePrint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	iv_rulePrint=rulePrint
	{ $current=$iv_rulePrint.current; }
	EOF;

// Rule Print
rulePrint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Print('
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintAccess().getPrintKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintAccess().getValueExpressionParserRuleCall_1_0());
				}
				lv_value_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrintAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleExportCSV
entryRuleExportCSV returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportCSVRule()); }
	iv_ruleExportCSV=ruleExportCSV
	{ $current=$iv_ruleExportCSV.current; }
	EOF;

// Rule ExportCSV
ruleExportCSV returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Store('
		{
			newLeafNode(otherlv_0, grammarAccess.getExportCSVAccess().getStoreKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportCSVAccess().getPathStringValueParserRuleCall_1_0());
				}
				lv_path_1_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportCSVRule());
					}
					set(
						$current,
						"path",
						lv_path_1_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getExportCSVAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleExportJSON
entryRuleExportJSON returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportJSONRule()); }
	iv_ruleExportJSON=ruleExportJSON
	{ $current=$iv_ruleExportJSON.current; }
	EOF;

// Rule ExportJSON
ruleExportJSON returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Export('
		{
			newLeafNode(otherlv_0, grammarAccess.getExportJSONAccess().getExportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportJSONAccess().getPathStringValueParserRuleCall_1_0());
				}
				lv_path_1_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportJSONRule());
					}
					set(
						$current,
						"path",
						lv_path_1_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getExportJSONAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMathPrimaryExpressionParserRuleCall_0());
		}
		this_MathPrimaryExpression_0=ruleMathPrimaryExpression
		{
			$current = $this_MathPrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBinaryExpressionParserRuleCall_1());
		}
		this_BinaryExpression_1=ruleBinaryExpression
		{
			$current = $this_BinaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNoneValueParserRuleCall_2());
		}
		this_NoneValue_2=ruleNoneValue
		{
			$current = $this_NoneValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getStringValueParserRuleCall_3());
		}
		this_StringValue_3=ruleStringValue
		{
			$current = $this_StringValue_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMathExpression
entryRuleMathExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMathExpressionRule()); }
	iv_ruleMathExpression=ruleMathExpression
	{ $current=$iv_ruleMathExpression.current; }
	EOF;

// Rule MathExpression
ruleMathExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMathExpressionAccess().getMathPrimaryExpressionParserRuleCall_0());
		}
		this_MathPrimaryExpression_0=ruleMathPrimaryExpression
		{
			$current = $this_MathPrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMathExpressionAccess().getBinaryExpressionParserRuleCall_1());
		}
		this_BinaryExpression_1=ruleBinaryExpression
		{
			$current = $this_BinaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryExpressionRule()); }
	iv_ruleBinaryExpression=ruleBinaryExpression
	{ $current=$iv_ruleBinaryExpression.current; }
	EOF;

// Rule BinaryExpression
ruleBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBinaryExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLeftMathPrimaryExpressionParserRuleCall_1_0());
				}
				lv_left_1_0=ruleMathPrimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"org.xtext.example.mydsl.MyDsl.MathPrimaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOpOpParserRuleCall_2_0());
				}
				lv_op_2_0=ruleOp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_2_0,
						"org.xtext.example.mydsl.MyDsl.Op");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryExpressionAccess().getRightMathExpressionParserRuleCall_3_0());
				}
				lv_right_3_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
					}
					set(
						$current,
						"right",
						lv_right_3_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getBinaryExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMathPrimaryExpression
entryRuleMathPrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMathPrimaryExpressionRule()); }
	iv_ruleMathPrimaryExpression=ruleMathPrimaryExpression
	{ $current=$iv_ruleMathPrimaryExpression.current; }
	EOF;

// Rule MathPrimaryExpression
ruleMathPrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMathPrimaryExpressionAccess().getIntValueParserRuleCall_0());
		}
		this_IntValue_0=ruleIntValue
		{
			$current = $this_IntValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMathPrimaryExpressionAccess().getSelectcellParserRuleCall_1());
		}
		this_Selectcell_1=ruleSelectcell
		{
			$current = $this_Selectcell_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMathPrimaryExpressionAccess().getLinesumParserRuleCall_2());
		}
		this_Linesum_2=ruleLinesum
		{
			$current = $this_Linesum_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMathPrimaryExpressionAccess().getColsumParserRuleCall_3());
		}
		this_Colsum_3=ruleColsum
		{
			$current = $this_Colsum_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMathPrimaryExpressionAccess().getLineprodParserRuleCall_4());
		}
		this_Lineprod_4=ruleLineprod
		{
			$current = $this_Lineprod_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMathPrimaryExpressionAccess().getColprodParserRuleCall_5());
		}
		this_Colprod_5=ruleColprod
		{
			$current = $this_Colprod_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSelectcell
entryRuleSelectcell returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectcellRule()); }
	iv_ruleSelectcell=ruleSelectcell
	{ $current=$iv_ruleSelectcell.current; }
	EOF;

// Rule Selectcell
ruleSelectcell returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Selectcell('
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectcellAccess().getSelectcellKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectcellAccess().getLineIndexMathExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectcellRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectcellAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectcellAccess().getColNameStringValueParserRuleCall_3_0());
				}
				lv_colName_3_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectcellRule());
					}
					set(
						$current,
						"colName",
						lv_colName_3_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectcellAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleLinesum
entryRuleLinesum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinesumRule()); }
	iv_ruleLinesum=ruleLinesum
	{ $current=$iv_ruleLinesum.current; }
	EOF;

// Rule Linesum
ruleLinesum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Linesum('
		{
			newLeafNode(otherlv_0, grammarAccess.getLinesumAccess().getLinesumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinesumAccess().getLineIndexMathExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinesumRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinesumAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleColsum
entryRuleColsum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColsumRule()); }
	iv_ruleColsum=ruleColsum
	{ $current=$iv_ruleColsum.current; }
	EOF;

// Rule Colsum
ruleColsum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Colsum('
		{
			newLeafNode(otherlv_0, grammarAccess.getColsumAccess().getColsumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColsumAccess().getColNameStringValueParserRuleCall_1_0());
				}
				lv_colName_1_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColsumRule());
					}
					set(
						$current,
						"colName",
						lv_colName_1_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getColsumAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleLineprod
entryRuleLineprod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineprodRule()); }
	iv_ruleLineprod=ruleLineprod
	{ $current=$iv_ruleLineprod.current; }
	EOF;

// Rule Lineprod
ruleLineprod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Lineprod('
		{
			newLeafNode(otherlv_0, grammarAccess.getLineprodAccess().getLineprodKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLineprodAccess().getLineIndexMathExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleMathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineprodRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.MathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLineprodAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleColprod
entryRuleColprod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColprodRule()); }
	iv_ruleColprod=ruleColprod
	{ $current=$iv_ruleColprod.current; }
	EOF;

// Rule Colprod
ruleColprod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Colprod('
		{
			newLeafNode(otherlv_0, grammarAccess.getColprodAccess().getColprodKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColprodAccess().getColNameStringValueParserRuleCall_1_0());
				}
				lv_colName_1_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColprodRule());
					}
					set(
						$current,
						"colName",
						lv_colName_1_0,
						"org.xtext.example.mydsl.MyDsl.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getColprodAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleOp
entryRuleOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpRule()); }
	iv_ruleOp=ruleOp
	{ $current=$iv_ruleOp.current.getText(); }
	EOF;

// Rule Op
ruleOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getAsteriskKeyword_2());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getSolidusKeyword_3());
		}
	)
;

// Entry rule entryRuleNoneValue
entryRuleNoneValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoneValueRule()); }
	iv_ruleNoneValue=ruleNoneValue
	{ $current=$iv_ruleNoneValue.current; }
	EOF;

// Rule NoneValue
ruleNoneValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0='None'
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNoneValueAccess().getValueNoneKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNoneValueRule());
				}
				setWithLastConsumed($current, "value", lv_value_0_0, "None");
			}
		)
	)
;

// Entry rule entryRuleIntValue
entryRuleIntValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current; }
	EOF;

// Rule IntValue
ruleIntValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current; }
	EOF;

// Rule StringValue
ruleStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
