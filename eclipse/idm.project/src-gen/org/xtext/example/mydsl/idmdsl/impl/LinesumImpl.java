/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.idmdsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.idmdsl.IdmdslPackage;
import org.xtext.example.mydsl.idmdsl.Linesum;
import org.xtext.example.mydsl.idmdsl.MathExpression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Linesum</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.idmdsl.impl.LinesumImpl#getLineIndex <em>Line Index</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LinesumImpl extends MathPrimaryExpressionImpl implements Linesum
{
  /**
   * The cached value of the '{@link #getLineIndex() <em>Line Index</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLineIndex()
   * @generated
   * @ordered
   */
  protected MathExpression lineIndex;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LinesumImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IdmdslPackage.Literals.LINESUM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MathExpression getLineIndex()
  {
    return lineIndex;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLineIndex(MathExpression newLineIndex, NotificationChain msgs)
  {
    MathExpression oldLineIndex = lineIndex;
    lineIndex = newLineIndex;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IdmdslPackage.LINESUM__LINE_INDEX, oldLineIndex, newLineIndex);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLineIndex(MathExpression newLineIndex)
  {
    if (newLineIndex != lineIndex)
    {
      NotificationChain msgs = null;
      if (lineIndex != null)
        msgs = ((InternalEObject)lineIndex).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IdmdslPackage.LINESUM__LINE_INDEX, null, msgs);
      if (newLineIndex != null)
        msgs = ((InternalEObject)newLineIndex).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IdmdslPackage.LINESUM__LINE_INDEX, null, msgs);
      msgs = basicSetLineIndex(newLineIndex, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdmdslPackage.LINESUM__LINE_INDEX, newLineIndex, newLineIndex));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IdmdslPackage.LINESUM__LINE_INDEX:
        return basicSetLineIndex(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IdmdslPackage.LINESUM__LINE_INDEX:
        return getLineIndex();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IdmdslPackage.LINESUM__LINE_INDEX:
        setLineIndex((MathExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IdmdslPackage.LINESUM__LINE_INDEX:
        setLineIndex((MathExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IdmdslPackage.LINESUM__LINE_INDEX:
        return lineIndex != null;
    }
    return super.eIsSet(featureID);
  }

} //LinesumImpl
