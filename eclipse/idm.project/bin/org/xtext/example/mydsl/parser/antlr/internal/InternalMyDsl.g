/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Programme";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgramme
entryRuleProgramme returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgrammeRule()); }
	iv_ruleProgramme=ruleProgramme
	{ $current=$iv_ruleProgramme.current; }
	EOF;

// Rule Programme
ruleProgramme returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgrammeAccess().getLoadscopesLoadscopeParserRuleCall_0());
			}
			lv_loadscopes_0_0=ruleLoadscope
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgrammeRule());
				}
				add(
					$current,
					"loadscopes",
					lv_loadscopes_0_0,
					"org.xtext.example.mydsl.MyDsl.Loadscope");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleLoadscope
entryRuleLoadscope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadscopeRule()); }
	iv_ruleLoadscope=ruleLoadscope
	{ $current=$iv_ruleLoadscope.current; }
	EOF;

// Rule Loadscope
ruleLoadscope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Load('
			{
				newLeafNode(otherlv_0, grammarAccess.getLoadscopeAccess().getLoadKeyword_0_0());
			}
			(
				(
					lv_url_1_0=RULE_STRING
					{
						newLeafNode(lv_url_1_0, grammarAccess.getLoadscopeAccess().getUrlSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoadscopeRule());
						}
						setWithLastConsumed(
							$current,
							"url",
							lv_url_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getLoadscopeAccess().getRightParenthesisKeyword_0_2());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getLoadscopeAccess().getLeftCurlyBracketKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoadscopeAccess().getInstructionsInstructionParserRuleCall_0_4_0());
					}
					lv_instructions_4_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoadscopeRule());
						}
						add(
							$current,
							"instructions",
							lv_instructions_4_0,
							"org.xtext.example.mydsl.MyDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getLoadscopeAccess().getRightCurlyBracketKeyword_0_5());
			}
		)
		    |
		(
			otherlv_6='Create()'
			{
				newLeafNode(otherlv_6, grammarAccess.getLoadscopeAccess().getCreateKeyword_1_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getLoadscopeAccess().getLeftCurlyBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoadscopeAccess().getInstructionsInstructionParserRuleCall_1_2_0());
					}
					lv_instructions_8_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoadscopeRule());
						}
						add(
							$current,
							"instructions",
							lv_instructions_8_0,
							"org.xtext.example.mydsl.MyDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getLoadscopeAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getInsertLineParserRuleCall_0_0());
			}
			this_InsertLine_0=ruleInsertLine
			{
				$current = $this_InsertLine_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getRemoveLineParserRuleCall_0_1());
			}
			this_RemoveLine_1=ruleRemoveLine
			{
				$current = $this_RemoveLine_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getInsertColParserRuleCall_0_2());
			}
			this_InsertCol_2=ruleInsertCol
			{
				$current = $this_InsertCol_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getRemoveColParserRuleCall_0_3());
			}
			this_RemoveCol_3=ruleRemoveCol
			{
				$current = $this_RemoveCol_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getModifyParserRuleCall_0_4());
			}
			this_Modify_4=ruleModify
			{
				$current = $this_Modify_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getStoreParserRuleCall_0_5());
			}
			this_Store_5=ruleStore
			{
				$current = $this_Store_5.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getExportParserRuleCall_0_6());
			}
			this_Export_6=ruleExport
			{
				$current = $this_Export_6.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getPrintParserRuleCall_0_7());
			}
			this_Print_7=rulePrint
			{
				$current = $this_Print_7.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getInstructionAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleInsertCol
entryRuleInsertCol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertColRule()); }
	iv_ruleInsertCol=ruleInsertCol
	{ $current=$iv_ruleInsertCol.current; }
	EOF;

// Rule InsertCol
ruleInsertCol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='InsertCol('
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertColAccess().getInsertColKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertColAccess().getColIndexExpressionParserRuleCall_1_0());
				}
				lv_colIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertColRule());
					}
					set(
						$current,
						"colIndex",
						lv_colIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertColAccess().getCommaKeyword_2());
		}
		(
			(
				lv_colName_3_0=RULE_STRING
				{
					newLeafNode(lv_colName_3_0, grammarAccess.getInsertColAccess().getColNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInsertColRule());
					}
					setWithLastConsumed(
						$current,
						"colName",
						lv_colName_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getInsertColAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRemoveCol
entryRuleRemoveCol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveColRule()); }
	iv_ruleRemoveCol=ruleRemoveCol
	{ $current=$iv_ruleRemoveCol.current; }
	EOF;

// Rule RemoveCol
ruleRemoveCol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RemoveCol('
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveColAccess().getRemoveColKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveColAccess().getColIndexExpressionParserRuleCall_1_0());
				}
				lv_colIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveColRule());
					}
					set(
						$current,
						"colIndex",
						lv_colIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getRemoveColAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleInsertLine
entryRuleInsertLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertLineRule()); }
	iv_ruleInsertLine=ruleInsertLine
	{ $current=$iv_ruleInsertLine.current; }
	EOF;

// Rule InsertLine
ruleInsertLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='InsertLine('
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertLineAccess().getInsertLineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertLineAccess().getLineIndexExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertLineRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertLineAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleRemoveLine
entryRuleRemoveLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveLineRule()); }
	iv_ruleRemoveLine=ruleRemoveLine
	{ $current=$iv_ruleRemoveLine.current; }
	EOF;

// Rule RemoveLine
ruleRemoveLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RemoveLine('
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveLineAccess().getRemoveLineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveLineAccess().getLineIndexExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveLineRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getRemoveLineAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleModify
entryRuleModify returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModifyRule()); }
	iv_ruleModify=ruleModify
	{ $current=$iv_ruleModify.current; }
	EOF;

// Rule Modify
ruleModify returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Modify('
		{
			newLeafNode(otherlv_0, grammarAccess.getModifyAccess().getModifyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifyAccess().getColIndexExpressionParserRuleCall_1_0());
				}
				lv_colIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifyRule());
					}
					set(
						$current,
						"colIndex",
						lv_colIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getModifyAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifyAccess().getRowIndexExpressionParserRuleCall_3_0());
				}
				lv_rowIndex_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifyRule());
					}
					set(
						$current,
						"rowIndex",
						lv_rowIndex_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getModifyAccess().getCommaKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModifyAccess().getValueExpressionParserRuleCall_5_0_0());
					}
					lv_value_5_1=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModifyRule());
						}
						set(
							$current,
							"value",
							lv_value_5_1,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModifyAccess().getValueStringValueParserRuleCall_5_0_1());
					}
					lv_value_5_2=ruleStringValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModifyRule());
						}
						set(
							$current,
							"value",
							lv_value_5_2,
							"org.xtext.example.mydsl.MyDsl.StringValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getModifyAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRulePrint
entryRulePrint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	iv_rulePrint=rulePrint
	{ $current=$iv_rulePrint.current; }
	EOF;

// Rule Print
rulePrint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Print('
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintAccess().getPrintKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrintAccess().getValueExpressionParserRuleCall_1_0_0());
					}
					lv_value_1_1=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrintRule());
						}
						set(
							$current,
							"value",
							lv_value_1_1,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPrintAccess().getValueStringValueParserRuleCall_1_0_1());
					}
					lv_value_1_2=ruleStringValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrintRule());
						}
						set(
							$current,
							"value",
							lv_value_1_2,
							"org.xtext.example.mydsl.MyDsl.StringValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrintAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Store('
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreAccess().getStoreKeyword_0());
		}
		(
			(
				lv_url_1_0=RULE_STRING
				{
					newLeafNode(lv_url_1_0, grammarAccess.getStoreAccess().getUrlSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoreRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoreAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	iv_ruleExport=ruleExport
	{ $current=$iv_ruleExport.current; }
	EOF;

// Rule Export
ruleExport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Export('
		{
			newLeafNode(otherlv_0, grammarAccess.getExportAccess().getExportKeyword_0());
		}
		(
			(
				lv_url_1_0=RULE_STRING
				{
					newLeafNode(lv_url_1_0, grammarAccess.getExportAccess().getUrlSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExportRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getExportAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getValuePrimaryExpressionParserRuleCall_0_0());
				}
				lv_value_0_1=rulePrimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_1,
						"org.xtext.example.mydsl.MyDsl.PrimaryExpression");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getValueBinexprParserRuleCall_0_1());
				}
				lv_value_0_2=ruleBinexpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_2,
						"org.xtext.example.mydsl.MyDsl.Binexpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueIntValueParserRuleCall_0_0());
				}
				lv_value_0_1=ruleIntValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_1,
						"org.xtext.example.mydsl.MyDsl.IntValue");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueSelectcellParserRuleCall_0_1());
				}
				lv_value_0_2=ruleSelectcell
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_2,
						"org.xtext.example.mydsl.MyDsl.Selectcell");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueLinesumParserRuleCall_0_2());
				}
				lv_value_0_3=ruleLinesum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_3,
						"org.xtext.example.mydsl.MyDsl.Linesum");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueColsumParserRuleCall_0_3());
				}
				lv_value_0_4=ruleColsum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_4,
						"org.xtext.example.mydsl.MyDsl.Colsum");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueLineprodParserRuleCall_0_4());
				}
				lv_value_0_5=ruleLineprod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_5,
						"org.xtext.example.mydsl.MyDsl.Lineprod");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueColprodParserRuleCall_0_5());
				}
				lv_value_0_6=ruleColprod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_0_6,
						"org.xtext.example.mydsl.MyDsl.Colprod");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectcell
entryRuleSelectcell returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectcellRule()); }
	iv_ruleSelectcell=ruleSelectcell
	{ $current=$iv_ruleSelectcell.current; }
	EOF;

// Rule Selectcell
ruleSelectcell returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Selectcell('
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectcellAccess().getSelectcellKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectcellAccess().getCellXExpressionParserRuleCall_1_0());
				}
				lv_cellX_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectcellRule());
					}
					set(
						$current,
						"cellX",
						lv_cellX_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectcellAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectcellAccess().getCellYExpressionParserRuleCall_3_0());
				}
				lv_cellY_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectcellRule());
					}
					set(
						$current,
						"cellY",
						lv_cellY_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectcellAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleLinesum
entryRuleLinesum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinesumRule()); }
	iv_ruleLinesum=ruleLinesum
	{ $current=$iv_ruleLinesum.current; }
	EOF;

// Rule Linesum
ruleLinesum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Linesum('
		{
			newLeafNode(otherlv_0, grammarAccess.getLinesumAccess().getLinesumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLinesumAccess().getLineIndexExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinesumRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLinesumAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleColsum
entryRuleColsum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColsumRule()); }
	iv_ruleColsum=ruleColsum
	{ $current=$iv_ruleColsum.current; }
	EOF;

// Rule Colsum
ruleColsum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Colsum('
		{
			newLeafNode(otherlv_0, grammarAccess.getColsumAccess().getColsumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColsumAccess().getColIndexExpressionParserRuleCall_1_0());
				}
				lv_colIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColsumRule());
					}
					set(
						$current,
						"colIndex",
						lv_colIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getColsumAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleLineprod
entryRuleLineprod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineprodRule()); }
	iv_ruleLineprod=ruleLineprod
	{ $current=$iv_ruleLineprod.current; }
	EOF;

// Rule Lineprod
ruleLineprod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Lineprod('
		{
			newLeafNode(otherlv_0, grammarAccess.getLineprodAccess().getLineprodKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLineprodAccess().getLineIndexExpressionParserRuleCall_1_0());
				}
				lv_lineIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineprodRule());
					}
					set(
						$current,
						"lineIndex",
						lv_lineIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLineprodAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleColprod
entryRuleColprod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColprodRule()); }
	iv_ruleColprod=ruleColprod
	{ $current=$iv_ruleColprod.current; }
	EOF;

// Rule Colprod
ruleColprod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Colprod('
		{
			newLeafNode(otherlv_0, grammarAccess.getColprodAccess().getColprodKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColprodAccess().getColIndexExpressionParserRuleCall_1_0());
				}
				lv_colIndex_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColprodRule());
					}
					set(
						$current,
						"colIndex",
						lv_colIndex_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getColprodAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleBinexpr
entryRuleBinexpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinexprRule()); }
	iv_ruleBinexpr=ruleBinexpr
	{ $current=$iv_ruleBinexpr.current; }
	EOF;

// Rule Binexpr
ruleBinexpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBinexprAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBinexprAccess().getLeftPrimaryExpressionParserRuleCall_1_0());
				}
				lv_left_1_0=rulePrimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinexprRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"org.xtext.example.mydsl.MyDsl.PrimaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBinexprAccess().getOpOpParserRuleCall_2_0());
				}
				lv_op_2_0=ruleOp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinexprRule());
					}
					set(
						$current,
						"op",
						lv_op_2_0,
						"org.xtext.example.mydsl.MyDsl.Op");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBinexprAccess().getRightExpressionParserRuleCall_3_0());
				}
				lv_right_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinexprRule());
					}
					set(
						$current,
						"right",
						lv_right_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getBinexprAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleOp
entryRuleOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpRule()); }
	iv_ruleOp=ruleOp
	{ $current=$iv_ruleOp.current.getText(); }
	EOF;

// Rule Op
ruleOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getAsteriskKeyword_2());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAccess().getSolidusKeyword_3());
		}
	)
;

// Entry rule entryRuleIntValue
entryRuleIntValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current; }
	EOF;

// Rule IntValue
ruleIntValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current; }
	EOF;

// Rule StringValue
ruleStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
